name: Build & Release Electron App

on:
  push:
    branches: [main]
    paths:
      - package.json
  workflow_dispatch:

permissions:
  contents: write

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      should_release: ${{ steps.check.outputs.should_release }}
      version: ${{ steps.check.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - id: check
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "Detected version: $VERSION"
          if gh release view "v$VERSION" > /dev/null 2>&1; then
            echo "should_release=false" >> $GITHUB_OUTPUT
          else
            echo "should_release=true" >> $GITHUB_OUTPUT
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: check-version
    if: needs.check-version.outputs.should_release == 'true'
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    name: Build on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Create .env file
        run: |
          echo "NODE_ENV=production" >> .env

      - name: Install Dependencies
        run: npm install

      - name: Build Electron App
        run: node scripts/buildPlatform.js

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: |
            build/**/*.AppImage
            build/**/*.exe
            build/**/*.dmg
            build/**/*.zip
            build/**/*.tar.gz

  release:
    needs: [check-version, build]
    runs-on: ubuntu-latest
    if: needs.check-version.outputs.should_release == 'true'
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.check-version.outputs.version }}
          name: Release v${{ needs.check-version.outputs.version }}
          files: artifacts/**/*/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
